name: Golang Docker CD

on: [push, pull_request]

jobs:
  deploy-docker-images-branch:
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/')"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create sanitized github.ref (head)
        run: echo "BRANCH_USED=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV

      - name: Build and push docker images (branches)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            brenekh/docker-hub-ghcr-test:${{ env.BRANCH_USED }}
            ghcr.io/brenekh/docker-hub-ghcr-test:${{ env.BRANCH_USED }}

  deploy-docker-images-to-latest:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create sanitized github.ref (tag)
        run: echo "TAG_USED=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV

      - name: Build and push container images (release)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            brenekh/docker-hub-ghcr-test:latest
            brenekh/docker-hub-ghcr-test:${{ env.TAG_USED }}
            ghcr.io/brenekh/docker-hub-ghcr-test:latest
            ghcr.io/brenekh/docker-hub-ghcr-test:${{ env.TAG_USED }}

  test-docker-meta:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Generate Docker Metadata
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          flavor: |
            latest=true
            prefix=test-
          images: |
            brenekh/docker-hub-ghcr-test
            ghcr.io/brenekh/docker-hub-ghcr-test
          tags: |
            type=ref,event=branch
            type=semver,pattern=test-{{version}}
            type=semver,pattern=test-{{major}}.{{minor}}
            type=semver,pattern=test-{{major}}

      - name: Output Docker Metadata
        run: echo "Tags:" && echo "${{ steps.meta.outputs.tags }}" && echo "Labels:" && echo "${{ steps.meta.outputs.labels }}"
